@inject HttpClient _client
@namespace Pureminds.Client.Components
<EditForm Model="@Source" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />

    <div class="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50">
        @if (isFormLoaded)
        {
            <div class="bg-[#0F172A] text-white rounded-lg shadow-lg p-8 w-[600px]">
                <h2 class="text-2xl font-bold mb-6 text-center">@Title</h2>

                <div class="grid grid-cols-2 gap-6 p-2">
                    <div>
                        <label for="productTitle" class="block text-sm font-medium text-gray-300">Product Title</label>
                        <InputText id="productTitle"
                                   disabled="@isDisabled"
                                   class="w-full border border-gray-700 bg-[#1E293B] text-white rounded py-2 px-3 focus:outline-none focus:ring focus:ring-blue-500"
                                   @bind-Value="Source.ProductTitle" />
                        <ValidationMessage For="() => Source.ProductTitle" class="text-red-500 text-sm mt-1" />
                    </div>
                    <div class="flex gap-2">
                        <div class="flex items-center gap-2">
                            <label for="IsPrioritized" class="block text-sm font-medium text-gray-300 p-2">Prioritized</label>
                            <input type="checkbox" checked="@Source.IsPrioritized" disabled="@isDisabled" class="form-checkbox h-5 w-5 text-blue-600">
                        </div>
                    </div>
                </div>
                <div class="p-4">
                    <label for="notes" class="block text-sm font-medium text-gray-300">Image file path</label>
                    <InputText id="notes"
                               disabled="@isDisabled"
                               class="w-full  bg-[#1E293B] text-white rounded py-2 px-3 focus:outline-none focus:ring focus:ring-blue-500"
                               @bind-Value="Source.Notes" />
                    <ValidationMessage For="() => Source.Notes" class="text-red-500 text-sm mt-1" />
                </div>
                <div class="p-4">
                    <label for="description" class="block text-sm font-medium text-gray-300">Description</label>
                    <InputTextArea id="description"
                                   disabled="@isDisabled"
                                   class="w-full border border-gray-700 bg-[#1E293B] text-white rounded py-2 px-3 focus:outline-none focus:ring focus:ring-blue-500"
                                   @bind-Value="Source.Description" />
                    <ValidationMessage For="() => Source.Description" class="text-red-500 text-sm mt-1" />
                </div>
                @if (Source.ProductAttachments is not null)
                {
                    <div class="bg-gray-500 rounded-lg p-2">
                        <div class="flex gap-2 justify-between p-2">
                            <label for="notes" class="block text-base font-bold text-white ">@Source.ProductAttachments.First().Attachment.AttachmentAttribute</label>
                            <InputFile accept=".jpg,.jpeg,.png,.pdf" id="attachment2" class="form-control" OnChange="@(e => HandleFileUpload(e , 0))" />
                        </div>
                    </div>

                }
                <div class="mt-6 text-right">
                    @if (OperationType != OperationType.Info)
                    {
                        <button type="submit"
                                class="bg-blue-500 text-white py-2 px-6 rounded hover:bg-blue-600 transition">
                            Save
                            @if (isFormSubmitted)
                            {
                                <i class="fas fa-spinner fa-spin mr-2"></i>
                            }
                        </button>
                    }
                    <button type="button"
                            @onclick="OnCancel"
                            class="ml-3 bg-gray-500 text-white py-2 px-6 rounded hover:bg-gray-600 transition">
                        Cancel
                    </button>
                </div>
            </div>
        }
        else
        {
            <ContentLoading />
        }
    </div>
</EditForm>

